132.86-127.44+c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
var(g1)
sp <- sqrt((9*var(g1)+9*var(g2))/18)
sp <- sqrt((9*var(g1-md)+9*var(g2-md))/sp)
md + c(-1,1)*qt(.975,18)*sp*sqrt(1/5)
x$conf
t.test(g2, g1, paired=F, var.equal=T)
t.test(g2,g1,paired=FALSE,var.equal=TRUE)$conf
t.test(g2,g1,paired=FALSE,var.equal=TRUE)$conf
t.test(g2,g1,paired=TRUE)$conf
t.test(g2,g1,paired=TRUE)$conf
num <- (15.34^2/8 + 18.23^2/21)^2
num <- (15.34^2/8 + 18.23^2/21)^2
den <- 15.34^4/8^2/7 + 18.23^4/21^2/20
mydf <- num/den
mydf <- num/den
132.86-127.44 +c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8 + 18.23^2/21)
myplot
myplot(2)
myplot(20)
myplot2(2)
qy(.p75, 2)
qy(.975, 2)
qt(.975, 2)
myplot2(20)
sleep
rande(g1)
range(g1)
range(g2)
difference <- g1 - g2
difference <- g2 - g1
mean(differenc)
mean(difference)
s <- sd(difference)
mn + c(-1, 1) * qt(.975, 9) * s/sqrt(n)
mn + c(-1, 1) * qt(.975, 9) * s/sqrt(10)
t.test(difference, .975, 9)$conf.int
t.test(difference, .95, paired=T, var.equal=T)$conf.int
t.test(difference, .95, paired=T, var.equal=T)$conf
t.test(g2, g1, .95, paired=T, var.equal=T)$conf
t.test(g2, g1, paired=T, var.equal=T)$conf
t.test(difference)$conf.int
sp <- 7 * 15.34^2 + 20 * 18.23^2
ns <- 8 + 21 -2
sp <- sqrt(sp/ns)
132,86 - 127,44 + c(-1, 1) * sp/sqrt(ns)
132.86 - 127.44 + c(-1, 1) * sp/sqrt(ns)
132.86 - 127.44 + c(-1, 1) * qt(.975, ns) * sp * sqrt(1/8 + 1/21)
sp <- sqrt((var(g2) * 9 + var(g1) * 9)/18)
sp
sp <- sqrt((9*var(g1)+9*var(g2))/18)
sp
sqrt((var(g2) * 9 + var(g1) * 9)/18)
md + c(-1, 1) * qt(.975, 18) * sp * (1/9 + 1/9)
md + c(-1, 1) * qt(.975, 18) * sp * (1/10 + 1/10)
md + c(-1,1)*qt(.975,18)*sp*sqrt(1/5)
md + c(-1, 1) * qt(.975, 18) * sp * (1/10 + 1/10)
t.test(g2 - g1, paired = F, var.equal = T)$conf
t.test(g2, g1, paired = F, var.equal = T)$conf
t.test(g2,g1,paired=FALSE,var.equal=TRUE)$conf
t.test(g2, g1, paired = T, var.equal = T)
t.test(g2, g1, paired = T)
t.test(g2,g1,paired=TRUE)$conf
num <- (var(g2)/10 +var(g1)/10)^2
num <- (var(g2)/8 +var(g1)/21)^2
num
num <- (15.34^2/8 + 18.23^2/21)^2
num
var(g2)
var(g1)
den <- 15,34^4/8^2/7 + 18.23^4/21^2/20
den <- 15.34^4/8^2/7 + 18.23^4/21^2/20
mydf <- num/den
132.86 - 127.44 + qt(.975, mydf) * sqrt(15.34^2/8 + 18.23^2/21)
132.86 - 127.44 + c(-1, 1) * qt(.975, mydf) * sqrt(15.34^2/8 + 18.23^2/21)
3.2
32/sqrt(100)
10/sqrt(100)
2
swirl()
library(swirl)
swirl()
library(switl)
library(swirl)
swirl()
swirl()
library(ggplot2)
library(swirl)
swirl()
library(swirl)
swirl()
swirl()
library(ggplot2)
swirl()
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
library(swirl)
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install_from_swirl("Statistical Inference")
?swirl
?install_from_swirl
install_from_swirl("Statistical_Inference")
library(swirl)
install_from_swirl("Statistical_Inference")
library(swirl)
install_from_swirl("Statistical Inference")
swirl()
install.packages(gplot2)
update.packages("ggplot2")
?update.packages
new.packages
new.packages()
swirl()
library(swirl)
swirl()
swirl()
swirl()
swirl()
head(pValues)
sum(pValues < 0.05)
p.adjust(pValues, method = "bonferroni")
sum(p.adjust(pValues, method = "bonferroni") < 0.05)
sum(p.adjust(pValues, method = "BH") < 0.05)
tail(trueStatus)
table(pValues < 0.05, trueStatus)
table(pValues2 < 0.05, trueStatus)
24/200
24/500
table(p.adjust(pValues2, method = "bonferroni"), trueStatus)
table(p.adjust(pValues2, method = "bonferroni") < 0.05, trueStatus)
table(p.adjust(pValues2, method = "BH") < 0.05, trueStatus)
library(swirl)
swirl()
1/6 + 2/6 +3/6 + 4/6 + 5/6 + 1
print(g2)
head(nh)
head(sh)
head(nh)
nh
median(resampledMedians)
median(sh)
sam <- sample(fh, nh*B, replace = TRUE)
resam <- matrix(sam, nrow = B, ncol = nh)
meds <- apply(resam, 1, FUN = median())
meds <- apply(resam, 1, median())
meds <- apply(resam, 1, FUN = "median"
)
meds <- apply(resam, 1, median)
median(fh) - median(meds)
sd(meds)
se(resampledMedians)
sd(resampledMedians)/sqrt(length(resampledMedians))
sd(resampledMedians
)
quantile(resampledMedians, c(0.025, 0.975))
quantile(meds, c(0.025, 0.975))
dim(InsectSprays)
names(InsectSprays)
range(Bdata$count)
summary(Bdata$count)
range(cdata$count)
range(Cdata$count)
BCcounts
BCcounts
group
testStat
obs <- testStat(BCcounts, group)
obs
mean(Bdata$count) - mean(Cdata$count)
sample(group)
perms <- sapply(1 : 10000, function(i) testStat(BCcounts, sample(group)))
perms > obs
mean(perms > obs)
testStat(DEcounts)
testStat(DEcounts, group)
perms <- sapply(1 : 10000, function(i) testStat(DEcounts, sample(group)))
library(swirl)
swirl()
head(pValues)
sum(pValues(pValues < 0.05))
sum(pValues < 0.05)
p.adjust(pValues, method = "bonferoni")
p.adjust(pValues, method = "bonferroni")
sum(p.adjust(pValues, method = "bonferroni"))
sum(p.adjust(pValues, method = "bonferroni") < 0.05)
sum(p.adjust(pValues, method = "BH") < 0.05)
tail(trueStatus)
table(trueStatus)
table(pValues2 < 0.05, trueStatus)
24/500
table(tValues2 < 0.05, p.adjust(pValues2, method = "bonferroni"))
table(tValues2 < 0.05, p.adjust(pValues2, method = "bonferroni"))
table(pValues2 < 0.05, p.adjust(tValues2, method = "bonferroni"))
table(pValues2 < 0.05, p.adjust(trueStatus, method = "bonferroni"))
table(trueStatus, p.adjust(pValues2 < 0.05, method = "bonferroni"))
table(p.adjust(pValues2,method="bonferroni") < 0.05, trueStatus)
?p.adjust
table(p.adjust(pValues2,method="BH") < 0.05, trueStatus)
swirl()
plot(child ~ parent, galton)
plot(jitter(child, 4) ~ parent, galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd = 3, col='red')
summary(regrline)
fit <- lm(child ~ parent, galton)
summary(residuals)
summary(fit$residuals)
summary(fit)
summary(fit$residuals)
fit$residuals
mean(fit$residuals)
cov(fit$residuals, galton$parent)
library(swirl)
swirl()
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
rhs-lhs
lhs-rhs
all.equal(lhs, rhs)
varChild <- var(child)
varChild
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- set(ols.slope, ols.ic)
varEst <- est(ols.slope, ols.ic)
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChils, varRes + varEst)
all.equal(varChild, varRes + varEst)
efit <- lm(accel ~ mag + dist, attenu)
summary(efit)
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
swirl()
cor(gpa_nor, gch_nor)
l_nor <- lm(gch_nor ~ gpa_nor)
fit <- lm(child ~ parent, galton)
sum((fit$residuals^2)/(n-2)
sum(fit$residuals^2)/(n-2)
sqrt(sum(fit$residuals^2)/(n-2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
mu <- mean(galton$child)
sTot <- sum((galton$child-mu)^2)
sRes <- deviance(sTot)
sRes <- deviance(sTot)
sRes <- deviance(sTot)
stot
sTot
sRes <- deviance(fit)
1 - sRes/sTot
all.equal((1 - sRes/sTot, summary(fit)$r.squared))
summary(fit)$r.squared
all.equal(1 - sRes/sTot, summary(fit)$r.squared)
cor(galton$parent,galton$child)^2
library(swirl)
swirl()
fit <- lm(child ~ parent.env())
fit <- lm(child ~ parent
)
fit <- lm(child ~ parent, galton)
sum(fit$residuals^2)/(n-2)
sqrt(sum(fit$residuals^2)/(n-2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
sqrt(deviance(fit)/(n-2))
mu <- mean(galton$child)
sqrt(sum((galton$child - mu)^2)/(n-2))
sqrt(sum((galton$child - mu)^2)
)
sTot <- sqrt(sum((galton$child - mu)^2))
sTot <- sum((galton$child - mu)^2)
sRes <- deviance(fit$residuals)
sRes <- deviance(fit)
1 - sRes/sTot
summary(fit)$r.squared
all.equal(1 - sRes/sTot, summary(fit)$r.squared)
cor(galton$parent,galton$child)^2
ones <- rep(1, nrow(galton))
lm(child ~ ones + parent -1)
lm(child ~ ones + parent -1, galton)
lm(child ~ parent, galton)
lm(child ~ 1, galton)
fit
View(trees)
fit <- lm(Volume ~ Girth + Height + Constant -1,
| trees)
fit <- lm(Volume ~ Girth + Height + Constant -1, trees)
trees2 <- eliminate("Girth", trees)
head(trees2)
fit2<- lm(Volume ~ Height + Constant - 1. trees2)
fit2<- lm(Volume ~ Height + Constant - 1, trees2)
lapply(list(fit, fit2), coef)
lm(Fertility ~ ., swiss)
all <- lm(Fertility ~ ., swiss)
summary(all)
lm(Fertility ~ agriculture, swiss)
lm(Fertility ~ Agriculture, swiss)
summary(lm(Fertility ~ Agriculture, swiss))
with(swiss, cor(Education, Examintaion))
cor(Education, Examintaion, swiss)
?cor
head(swiss)
cor(Examination, Education)
cor(swiss$Examination, swiss$Education)
cor(swiss$Agriculture, swiss$Education)
makelms()
swiss$ec <- swiss$Examination + swiss$Catholic
ec <- swiss$Examination + swiss$Catholic
efit <- lm(Fertility ~ . + ec, swiss)
fit$coefficients - efit$coefficients
all$coefficients-efit$coefficients
6
dim(InsectSprays)
head(InsectSprays)
head(InsectSprays, 15)
A
sx$a
sx$A
sa
sA
library(swirl)
swirl()
head(InsectSprays)
summary(Spray)
summary(InsectSprays$Spray)
summary(InsectSprays[, 2])
sapply(InsectSprays)
sapply(InsectSprays, class())
sapply(InsectSprays, class
)
attach(InsectSprays)
fit <- lm(count ~ spray, InsectSprays)
summary(fit)
summary(fit)$coef
est <- summary(fit)$coef[, 1]
mean(subset(InsectSprays, select = c("count"), spray = "A"))
mean(sA)
mean(sB)
nfit <- lm(count ~ spray - 1, InsectSprays)
summary(nfit)$coef
spary2 <- relevel(InsectSprays$spray, "C")
spary2 <- relevel(InsectSprays$spray, \"C\")
"spray2 <- relevel(InsectSprays$spray,\"C\")
)
spray2 <- relevel(InsectSprays$spray,\"C\")
spray2 <- relevel(InsectSprays$spray,\"C\")
spray2 <- relevel(InsectSprays$spray,\"C")
spray2 <- relevel(InsectSprays$spray,"C\")
)
spray2 <- relevel(InsectSprays$spray, \"C\")
spray2 <- relevel(InsectSprays$spray,\"C\")
info()
skip()
fit2 <- (count ~ spray, spray2)
fit2 <- lm(count ~ spray, spray2)
fit2 <- lm(count ~ spray, InsectSprays)
fit2 <- lm(count ~ spray2, InsectSprays)
summary(fit2)$coef
mean(sC)
(fit$coef[3] - fit$coef[2])/1.6011
(fit$coef[2] - fit$coef[3])/1.6011
dim(hunger)
948
names(hunger)
fit <- lm(Numeric ~ Year)
fit <- lm(Numeric ~ Year, hunger)
summary(fit)$coef
lmF <- lm(Numeric ~ Sex, hunger[hunger$Sex == "Female"])
hunger[hunger$Sex == "Female"]
lmF <- lm(Numeric ~ Sex, hunger[Sex == "Female"])
skip()
lmM <- lm(hunger$Numeric[hunger$Sex=="Male"]
)
lmM <- lm(hunger$Numeric[hunger$Sex=="Female"] ~ hunger$Year[hunger$Sex=="Female"])
lmM <- lm(hunger$Numeric[hunger$Sex=="male"] ~ hunger$Year[hunger$Sex=="Female"])
lmM <- lm(hunger$Numeric[hunger$Sex=="<ale"] ~ hunger$Year[hunger$Sex=="Female"])
lmM <- lm(hunger$Numeric[hunger$Sex=="Male"] ~ hunger$Year[hunger$Sex=="Female"])
lmM <- lm(hunger$Numeric[hunger$Sex=="Male"] ~ hunger$Year[hunger$Sex=="Male"])
lmBoth <- lm(Numeric ~ Year + Sex, hunger)
summary(lmBoth)
lmInter <- lm(Numeric ~ Year + Sex + Sex*Year)
lmInter <- lm(Numeric ~ Year + Sex + Sex*Year, hunger)
summary(lmInter)
library(swirl)
swirl()
fit <- lm(y ~ x, out2)
plot(fit, which=1)
fitno <- lm(y ~ x, out2[-1, ])
plot(fitno, which=1)
coef(fit) - coef(fitno)
head(dfbeta(fit))
resno <- out2[1, "y"] - predict(fitno, out2[2, 1])
resno <- out2[1, "y"] - predict(fitno, out2[1,])
1 - resid(fit)[1]/resno
head(hatvalues(fit))
sigma <- sd(resid(fit))
sigma <- sqrt(deviance(fit)/df.residual(fit))
library(swirl)
swirl()
rstd <- resid(fit)/(sigma*sqrt(1-hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit, which=3)
plot(fit, which=2)
sigma1 <- sqrt(deviance(fitno)/df.residual(fitno))
resid(fit)[1]/(sigma * sqrt(1-hatvalues(fit)[1]))
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1]))
head(rstudent(fit))
predict(fitno, out2) - predict(fit, out2)
dy <- predict(fitno, out2) - predict(fit, out2)
sum(dy^2)/(2*sigma^2)
plot(fit, which=5)
head(out2)
ift <- lm(y ~ x, out2)
fit <- lm(y ~ x, out2)
plot(fit, which=1)
?plot
?which
fitno <- lm(y ~ x, out2[-1, ])
plot(fitno, which = 1)
coef(fit) -coef(fitno)
head(dfbeta(fit))
resno <- out2[1, "y"] - predict(fitno, out2[1, ])
1-resid(fit)[1]/resno
head(hatvalues(fit))
?deviance
sigma <- sqrt(devaince(fit)/df.residual(fit))
sigma <- sqrt(deviance(fit)/df.residual(fit))
?caret
library(caret)
?caret
caretFuncs
?caretFuncs
??caret
descrCor <- cor(train_nonzv_nona[, 1:68])
setwd("C:/Work/DataScience/Practical Machine Learning/Data")
train <- read.csv("pml-training.csv")
test <- read.csv("pml-testing.csv")
library(caret)
library(ggplot2)
library(Amelia)
nzv <- nearZeroVar(train[, 1:159])
train_nonzv <- train[, -nzv]
dim(train_nonzv)
findNAColumns <- function(x) {
flag = 0
countNA <- sum(is.na(x))
na_ratio <- countNA/length(x)
print(na_ratio, zero.print = ".")
if (na_ratio > 0.9) {
flag = 1
}
flag
}
# Applying our function to the train_nonzv dataset
isTotalNa <- sapply(train_nonzv[, 1:99], findNAColumns)
# Selectin columns from train_nonzv, which contains NA values less then on 90%
train_nonzv_nona <- train_nonzv[, -which(as.logical(isTotalNa))]
descrCor <- cor(train_nonzv_nona[, 1:68])
dim(train_nonzv_nona)
View(train_nonzv_nona)
descrCor <- cor(train_nonzv_nona[, 5:58])
descrCor <- cor(as.matrix(train_nonzv_nona[, 5:58]))
descrCor <- cor(as.matrix(train_nonzv_nona[, 5:58]))
supply(train_nonzv_nona, class())
supply(train_nonzv_nona, class
)
class(train_nonzv_nona$magnet_belt_x)
descrCor <- cor(as.numeric(train_nonzv_nona[, 5:58]))
class(train_nonzv_nona)
?cor
cor(train)
grep('NA', train_nonzv_nona)
sapply(grep('NA', train_nonzv_nona))
sapply(train_nonzv_nona, function(x) = grep('NA', x))
?sapply
sapply(train_nonzv_nona, function(x) <- grep('NA', x))
fun1 <- function(x) { grep('NA', x)}
sapply(train_nonzv_nona, fun1
)
class(train_nonzv_nona)
class(train_nonzv_nona$accel_belt_z)
sapply(train_nonzv_nona, is.numeric)
train_for_cor <- train_nonzv_nona[, 5:58]
cor(train_for_cor[, which(is.numeric(train_for_cor))])
which(is.numeric(train_for_cor))
which(is.numeric(train_for_cor))
is.numeric(train_for_cor)
train_for_cor <- train_nonzv_nona[, 5:58]
dim(train_for_cor)
which(is.numeric(train_for_cor))
is.numeric(train_for_cor)
is.numeric(train_for_cor[, 1:54])
dim(train_for_cor)
is.numeric(train_for_cor)
train_for_cor <- train_nonzv_nona[, 5:58]
train_for_cor
is.numeric(train_for_cor)
class(train_for_cor)
train_for_cor <- train_nonzv_nona[, 5:58]
is.numeric(train_for_cor)
is.numeric(train_for_cor[, 1:54])
sapply(train_for_cor, is.numeric)
train_for_cor <- train_for_cor[, which(sapply(train_for_cor, is.numeric))]
View(train_for_cor)
dim(train_for_cor)
View(train_for_cor)
cor(train_for_cor)
View(train_for_cor)
